
BotoesUART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000024c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001d8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  0000024c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000024c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000027c  2**2
                  CONTENTS, READONLY
  5 .debug_info   000005f4  00000000  00000000  000002bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  000008b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000133  00000000  00000000  00000e52  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  00000f85  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 ed       	ldi	r30, 0xD8	; 216
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 30       	cpi	r26, 0x02	; 2
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 c5 00 	call	0x18a	; 0x18a <main>
  9e:	0c 94 ea 00 	jmp	0x1d4	; 0x1d4 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <USART_Transmit>:
  a6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
  aa:	95 ff       	sbrs	r25, 5
  ac:	fc cf       	rjmp	.-8      	; 0xa6 <USART_Transmit>
  ae:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  b2:	08 95       	ret

000000b4 <__vector_18>:
  b4:	1f 92       	push	r1
  b6:	0f 92       	push	r0
  b8:	0f b6       	in	r0, 0x3f	; 63
  ba:	0f 92       	push	r0
  bc:	11 24       	eor	r1, r1
  be:	2f 93       	push	r18
  c0:	3f 93       	push	r19
  c2:	4f 93       	push	r20
  c4:	5f 93       	push	r21
  c6:	6f 93       	push	r22
  c8:	7f 93       	push	r23
  ca:	8f 93       	push	r24
  cc:	9f 93       	push	r25
  ce:	af 93       	push	r26
  d0:	bf 93       	push	r27
  d2:	ef 93       	push	r30
  d4:	ff 93       	push	r31
  d6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  da:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <new>
  de:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <new>
  e2:	8a 34       	cpi	r24, 0x4A	; 74
  e4:	21 f4       	brne	.+8      	; 0xee <__vector_18+0x3a>
  e6:	89 b1       	in	r24, 0x09	; 9
  e8:	8c 7f       	andi	r24, 0xFC	; 252
  ea:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit>
  ee:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <new>
  f2:	82 34       	cpi	r24, 0x42	; 66
  f4:	21 f4       	brne	.+8      	; 0xfe <__vector_18+0x4a>
  f6:	86 b1       	in	r24, 0x06	; 6
  f8:	8f 73       	andi	r24, 0x3F	; 63
  fa:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Transmit>
  fe:	2a 9a       	sbi	0x05, 2	; 5
 100:	2d 9a       	sbi	0x05, 5	; 5
 102:	81 e0       	ldi	r24, 0x01	; 1
 104:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
 108:	ff 91       	pop	r31
 10a:	ef 91       	pop	r30
 10c:	bf 91       	pop	r27
 10e:	af 91       	pop	r26
 110:	9f 91       	pop	r25
 112:	8f 91       	pop	r24
 114:	7f 91       	pop	r23
 116:	6f 91       	pop	r22
 118:	5f 91       	pop	r21
 11a:	4f 91       	pop	r20
 11c:	3f 91       	pop	r19
 11e:	2f 91       	pop	r18
 120:	0f 90       	pop	r0
 122:	0f be       	out	0x3f, r0	; 63
 124:	0f 90       	pop	r0
 126:	1f 90       	pop	r1
 128:	18 95       	reti

0000012a <initUart>:
 12a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 12e:	87 e6       	ldi	r24, 0x67	; 103
 130:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 134:	e1 ec       	ldi	r30, 0xC1	; 193
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	80 81       	ld	r24, Z
 13a:	88 69       	ori	r24, 0x98	; 152
 13c:	80 83       	st	Z, r24
 13e:	e2 ec       	ldi	r30, 0xC2	; 194
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	80 81       	ld	r24, Z
 144:	8a 60       	ori	r24, 0x0A	; 10
 146:	80 83       	st	Z, r24
 148:	08 95       	ret

0000014a <checkForChange>:
 14a:	26 b1       	in	r18, 0x06	; 6
 14c:	2f 73       	andi	r18, 0x3F	; 63
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	28 17       	cp	r18, r24
 154:	39 07       	cpc	r19, r25
 156:	51 f4       	brne	.+20     	; 0x16c <checkForChange+0x22>
 158:	29 b1       	in	r18, 0x09	; 9
 15a:	2c 7f       	andi	r18, 0xFC	; 252
 15c:	30 e0       	ldi	r19, 0x00	; 0
 15e:	70 e0       	ldi	r23, 0x00	; 0
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	26 17       	cp	r18, r22
 164:	37 07       	cpc	r19, r23
 166:	19 f4       	brne	.+6      	; 0x16e <checkForChange+0x24>
 168:	80 e0       	ldi	r24, 0x00	; 0
 16a:	08 95       	ret
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	08 95       	ret

00000170 <init>:
 170:	8f ef       	ldi	r24, 0xFF	; 255
 172:	88 b9       	out	0x08, r24	; 8
 174:	8b b9       	out	0x0b, r24	; 11
 176:	87 b1       	in	r24, 0x07	; 7
 178:	8f 63       	ori	r24, 0x3F	; 63
 17a:	87 b9       	out	0x07, r24	; 7
 17c:	8a b1       	in	r24, 0x0a	; 10
 17e:	8c 6f       	ori	r24, 0xFC	; 252
 180:	8a b9       	out	0x0a, r24	; 10
 182:	0e 94 95 00 	call	0x12a	; 0x12a <initUart>
 186:	78 94       	sei
 188:	08 95       	ret

0000018a <main>:
 18a:	2f ef       	ldi	r18, 0xFF	; 255
 18c:	83 ed       	ldi	r24, 0xD3	; 211
 18e:	90 e3       	ldi	r25, 0x30	; 48
 190:	21 50       	subi	r18, 0x01	; 1
 192:	80 40       	sbci	r24, 0x00	; 0
 194:	90 40       	sbci	r25, 0x00	; 0
 196:	e1 f7       	brne	.-8      	; 0x190 <main+0x6>
 198:	00 c0       	rjmp	.+0      	; 0x19a <main+0x10>
 19a:	00 00       	nop
 19c:	0e 94 b8 00 	call	0x170	; 0x170 <init>
 1a0:	d0 e0       	ldi	r29, 0x00	; 0
 1a2:	c0 e0       	ldi	r28, 0x00	; 0
 1a4:	cf 33       	cpi	r28, 0x3F	; 63
 1a6:	21 f4       	brne	.+8      	; 0x1b0 <main+0x26>
 1a8:	dc 3f       	cpi	r29, 0xFC	; 252
 1aa:	11 f4       	brne	.+4      	; 0x1b0 <main+0x26>
 1ac:	2d 98       	cbi	0x05, 5	; 5
 1ae:	01 c0       	rjmp	.+2      	; 0x1b2 <main+0x28>
 1b0:	2d 9a       	sbi	0x05, 5	; 5
 1b2:	6d 2f       	mov	r22, r29
 1b4:	8c 2f       	mov	r24, r28
 1b6:	0e 94 a5 00 	call	0x14a	; 0x14a <checkForChange>
 1ba:	88 23       	and	r24, r24
 1bc:	31 f0       	breq	.+12     	; 0x1ca <main+0x40>
 1be:	c6 b1       	in	r28, 0x06	; 6
 1c0:	cf 73       	andi	r28, 0x3F	; 63
 1c2:	d9 b1       	in	r29, 0x09	; 9
 1c4:	dc 7f       	andi	r29, 0xFC	; 252
 1c6:	2a 98       	cbi	0x05, 2	; 5
 1c8:	2d 98       	cbi	0x05, 5	; 5
 1ca:	25 e3       	ldi	r18, 0x35	; 53
 1cc:	2a 95       	dec	r18
 1ce:	f1 f7       	brne	.-4      	; 0x1cc <main+0x42>
 1d0:	00 00       	nop
 1d2:	e8 cf       	rjmp	.-48     	; 0x1a4 <main+0x1a>

000001d4 <_exit>:
 1d4:	f8 94       	cli

000001d6 <__stop_program>:
 1d6:	ff cf       	rjmp	.-2      	; 0x1d6 <__stop_program>
